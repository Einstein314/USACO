#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vii;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define FOR(i,a,b) for (int i = a; i < b; i++)
#define F0R(i,a) for (int i = 0; i < a; i++)
#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)
#define F0Rd(i,a) for (int i = (a)-1; i>=0; i--)
#define pb push_back
#define all(x) x.begin(), x.end()

int n, m, a[300500], b[300500], x[2], y[2], z[2];
bool ex[4], alls;

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);
    
    cin >> n >> m;
    F0R(i,m){
        cin >> a[i] >> b[i];
    }
    x[0] = a[0];
    x[1] = b[0];
    F0R(i,m){
        if (a[i] != x[0] && b[i] != x[0]){
            y[0] = a[i];
            y[1] = b[i];
            break;
        }
    }
    F0R(i,m){
        if (a[i] != x[1] && b[i] != x[1]){
            z[0] = a[i];
            z[1] = b[i];
            break;
        }
    }
    F0R(i,4) ex[i] = 1;
    F0R(ix,2){
        if (ix == 0){
            F0R(iy, 2){
                F0R(i,m){
                    if (a[i] != x[ix] && a[i] != y[iy] && b[i] != x[ix] && b[i] != y[iy]){
                        ex[ix + iy] = 0;
                    }
                }
            }
        }
        else{
            F0R(iz, 2){
                F0R(i,m){
                    if (a[i] != x[ix] && a[i] != z[iz] && b[i] != x[ix] && b[i] != z[iz]){
                        ex[ix + iz + 1] = 0;
                    }
                }
            }
            
        }
    }
    F0R(i,4){
        if (ex[i]){
            cout << "YES\n";
            return 0;
        }
    }
    
    cout << "NO\n";
    
    
    
    
    
    
    return 0;
}

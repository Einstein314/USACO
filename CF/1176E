#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vii;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define FOR(i,a,b) for (int i = a; i < b; i++)
#define F0R(i,a) for (int i = 0; i < a; i++)
#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)
#define F0Rd(i,a) for (int i = (a)-1; i>=0; i--)
#define pb push_back
#define all(x) x.begin(), x.end()

const int mx = 2e5 + 10;
int t, n, m, v, u, col[mx];
bool visited[mx];
vi adj[mx];


void dfs(int e){
    visited[e] = 1;
	col[e] = 0;
    for (auto f : adj[e]){
        if (!visited[f]){
            dfs(f);
			if (col[f] % 2 == 0) col[e] = 1;
        }
    }
}

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);

	cin >> t;
	F0R(i,t){
		cin >> n >> m;
        FOR(j, 1, n+1) visited[j] = 0;
        FOR(j, 1, n+1) adj[j].clear();
		FOR(j, 1, n+1) col[j] = -1;
		F0R(j, m){
			cin >> v >> u;
			adj[v].pb(u);
			adj[u].pb(v);
		}
        dfs(1);
		int ans = 0;
		FOR(j,1,n+1) if (col[j] % 2 == 1) ans++;
		cout << ans << "\n";
		FOR(j,1,n+1) if (col[j] % 2 == 1) cout << j << " ";
		cout << "\n";

	}







    return 0;
}

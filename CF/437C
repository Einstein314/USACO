#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vii;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define FOR(i,a,b) for (int i = a; i < b; i++)
#define F0R(i,a) for (int i = 0; i < a; i++)
#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)
#define F0Rd(i,a) for (int i = (a)-1; i>=0; i--)
#define pb push_back
#define all(x) x.begin(), x.end()

int n, m, x, y, arr[2050], en, tmp[2050], ans;
vi adj[2050];
vii v;

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);

	cin >> n >> m;
	F0R(i,n){
		cin >> en;
		tmp[i+1] = en;
		v.push_back(make_pair(en, i+1));		
	}
	sort(v.rbegin(), v.rend());
	F0R(i,m){
		cin >> x >> y;
		adj[x].push_back(y);
		adj[y].push_back(x);
	}
	F0R(i,n){
		int temp = 0;
		for (auto a : adj[i+1]){
			temp += tmp[a];
		}
		arr[i+1] = temp;
	}
	F0R(i,n){
		int vert = v[i].second; 
		ans += arr[vert];
		for (auto a : adj[vert]){
			arr[a] -= v[i].first;
		}
	}
	cout << ans << endl;






	
    return 0;






	

}

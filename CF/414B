#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vii;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define FOR(i,a,b) for (int i = a; i < b; i++)
#define F0R(i,a) for (int i = 0; i < a; i++)
#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)
#define F0Rd(i,a) for (int i = (a)-1; i>=0; i--)
#define pb push_back
#define all(x) x.begin(), x.end()

const int MOD = 1e9 + 7;
int n, k, dp[2050][2050];
vi divs[2050];

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);

	cin >> n >> k;
	FOR(i, 1, n+1){
		FOR(j, 1, n+1){
			if (i % j == 0) divs[i].push_back(j);
		}
	}

	FOR(i, 1, n+1){
		dp[i][1] = 1;
	}
	FOR(l, 2, k+1){
		FOR(i, 1, n+1){
			for (auto a : divs[i]){
				dp[i][l] = (dp[i][l] + dp[a][l-1]) % MOD;
			}
		}
	}
	int tot = 0;
	FOR(i, 1, n+1){
		tot = (tot + dp[i][k]) % MOD;
	}
	cout << tot << endl;








	
    return 0;






	

}

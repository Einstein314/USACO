#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vii;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define FOR(i,a,b) for (int i = a; i < b; i++)
#define F0R(i,a) for (int i = 0; i < a; i++)
#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)
#define F0Rd(i,a) for (int i = (a)-1; i>=0; i--)
#define pb push_back
#define all(x) x.begin(), x.end()

int n;
string arr[22];

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);

	cin >> n;
	F0R(i, 22){
		F0R(j, 4*n+1) arr[i] += " ";
	}
	FOR(i, 1, n+2){
		for (int j = 2*n - 2*(i-1); j <= 2*n; j++){
			if (j % 2 == 0) arr[i][j] = '0' + (j - (2*n - 2*(i-1)))/2; 
		}		
		string tmp = arr[i].substr(0, 2*n);
		reverse(tmp.begin(), tmp.end());
		for (int j = 2*n + 1; j <= 4*n; j++){
			arr[i][j] = tmp[j - 2*n - 1];
		}
	}
	FOR(i, 1, n+2){
		cout << arr[i].substr(0, 2*n + 2*(i-1) + 1) << "\n";
	}
	FORd(i, 1, n+1){
		cout << arr[i].substr(0, 2*n + 2*(i-1) + 1) << "\n";
	}


	
    return 0;
}

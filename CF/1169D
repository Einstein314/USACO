#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vii;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define FOR(i,a,b) for (int i = a; i < b; i++)
#define F0R(i,a) for (int i = 0; i < a; i++)
#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)
#define F0Rd(i,a) for (int i = (a)-1; i>=0; i--)
#define pb push_back
#define all(x) x.begin(), x.end()

int n, mins[300500];
ll ans;
string s;

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);
  
    cin >> s;
    n = s.length();
    
    memset(mins, -1, sizeof(mins));
    F0R(i,n){
        for (int k = 1; i + 2*k < n; k++){
            if (s[i] == s[i+k] && s[i] == s[i+2*k]){
                mins[i] = i + 2*k;
                break;
            }
        }
    }
    
    int mindist = 5e5;
    F0Rd(i, n){
        if (mins[i] != -1) mindist = min(mindist, mins[i]);
        if (mindist < n){
            ans += 1LL * (n - mindist);
        }
    }
    cout << ans << endl;
    
    
    
    return 0;
}

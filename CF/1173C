#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vii;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define FOR(i,a,b) for (int i = a; i < b; i++)
#define F0R(i,a) for (int i = 0; i < a; i++)
#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)
#define F0Rd(i,a) for (int i = (a)-1; i>=0; i--)
#define pb push_back
#define all(x) x.begin(), x.end()
#define sz(x) int((x).size())
#define f first
#define s second 
#define newl '\n'
#define mp make_pair

const int mx = 2e5 + 100;
int n, a[mx], b[mx], pos[mx];

bool check(int x){
	bool bad = 0;
	FOR(i,1,n+1){
		if (pos[i] >=  x + i - 1) bad = 1;
	}
	return !bad;
}

int main(){
   // ios::sync_with_stdio(0);
   // cin.tie(0);
    
    cin >> n;
    F0R(i,n){
        cin >> a[i];
        pos[i+1] = -1;
    }
    F0R(i,n){
        cin >> b[i];
        pos[b[i]] = i;
    }
    if (pos[1] != -1){
        bool bad = 0;
        int oi = pos[1];
        FOR(i, oi, n){
            if (b[i] != i - oi + 1) bad = 1;
        }
        FOR(i, n-oi+1, n+1){
            if (pos[i] >= i - (n - oi + 1)) bad = 1;
        }
		if (!bad){
			cout << oi << newl;
		    return 0;
		}
    }
	int l = 0, r = n;
	while (l < r){
		int mid = (l+r)/2;
		if (check(mid)){
			r = mid;
		}
		else{
			l = mid + 1;
		}
	}
    cout << n + l << newl;
   
    
    
    return 0;
}

#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vii;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define FOR(i,a,b) for (int i = a; i < b; i++)
#define F0R(i,a) for (int i = 0; i < a; i++)
#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)
#define F0Rd(i,a) for (int i = (a)-1; i>=0; i--)
#define pb push_back
#define all(x) x.begin(), x.end()
#define sz(x) int((x).size())
#define f first
#define s second 
#define newl '\n'
#define mp make_pair


int n, p[2050], d[2050], vis[2050];
vi par, adj[2050];

void dfs(int x){
	vis[x] = 1;
	for (auto b : adj[x]){
		if (!vis[b]){
			d[b] = d[x] + 1;
			dfs(b);
		}
	}

}

int main(){
   // ios::sync_with_stdio(0);
   // cin.tie(0);


	cin >> n;
	F0R(i,n){
		cin >> p[i+1];
		if (p[i+1] == -1) par.pb(i+1);
		else{
			adj[i+1].pb(p[i+1]);
			adj[p[i+1]].pb(i+1);
		}
	}
	for (auto a : par){
		dfs(a);
	}
	int ans = 0;
	F0R(i, n){
		ans = max(ans, d[i+1]);
	}
	cout << ans + 1 << newl;











    return 0;
}

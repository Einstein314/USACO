#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vii;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define FOR(i,a,b) for (int i = a; i < b; i++)
#define F0R(i,a) for (int i = 0; i < a; i++)
#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)
#define F0Rd(i,a) for (int i = (a)-1; i>=0; i--)
#define pb push_back
#define all(x) x.begin(), x.end()

const int mx = 5e5 + 100;
int n, a[mx], cnt[50], cnter, add[50], rcnt;

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);

	int tmp[6] = {4,8,15,16,23,42};
	cin >> n;
	F0R(i,n){
		cin >> a[i];
		cnt[a[i]]++;
		cnter++;
		F0R(j,5){
			if (cnt[tmp[j]] < cnt[tmp[j+1]]){
				cnt[a[i]]--;
				cnter--;
				rcnt++;
				break;
			}
		}
	}
	int tmin = 1e6;
	F0R(i,6){
		tmin = min(tmin, cnt[tmp[i]]);
	}
	F0R(i,6){
		rcnt += cnt[tmp[i]] - tmin;
	}
	cout << rcnt  << "\n";







    return 0;
}

#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vii;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define FOR(i,a,b) for (int i = a; i < b; i++)
#define F0R(i,a) for (int i = 0; i < a; i++)
#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)
#define F0Rd(i,a) for (int i = (a)-1; i>=0; i--)
#define pb push_back
#define all(x) x.begin(), x.end()

int n, m, arr[300500], ans;

bool check(int x){
    int prev = 0;
    bool lc = 1;
    F0R(i,n){
        if (arr[i] > prev){
            int d = m - arr[i] + prev;
            if (d > x) prev = arr[i];
        }
        else{
            int d = prev - arr[i];
            if (d > x) {lc = 0; break;}
        }
    }
    return lc;
}


int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);
  
    cin >> n >> m;
    F0R(i, n) cin >> arr[i];
    
    int l = 0, r = m;
    while (l < r){
        int mid = (l+r)/2;
        if (check(mid)){
            ans = mid;
            r = mid;
        }
        else{
            l = mid + 1;
        }
    }
    cout << ans << endl;
    
    

    
    
    
    
    return 0;
}

//#pragma GCC optimize ("O3")
//#pragma GCC target ("sse4")

#include <bits/stdc++.h>
//#include <ext/pb_ds/tree_policy.hpp>
//#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
//using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vii;

//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define FOR(i,a,b) for (int i =a; i<b;i++)
#define F0R(i,a) for (int i =0; i < a; i++)
#define FORd(i,a,b) for (int i = (b)-1;i >=a;i--)
#define F0Rd(i,a) for (int i = (a)-1;i >=0; i--)
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define lb lower_bound
#define ub upper_bound
#define all(x) x.begin(), x.end()
#define pr(x) cout << x << "\n"
#define bug(x) cout << x << " "
#define trav(a,x) for (auto& a : x)

ll n, h, a[1050], b[1050],l, r;


bool valid(int k){
    if (k > n) return 0;
    F0R(i, k) b[i+1] = a[i];
    sort(b, b+k+1);
    ll hsum = 0;
    if (k % 2 == 0){
        for (int i = 2; i <= k; i+=2) hsum += b[i];
    }
    else{
        for (int i = 1; i <= k; i+=2) hsum += b[i];
    }
    if (hsum <= h) return 1;
    return 0;
}


int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);
    
    cin >> n >> h;
    F0R(i, n) cin >> a[i];
   
    
    int x = -1;
    for (int b = n+10; b >= 1; b /= 2){
        while (valid(x+b)) x += b;
    }
    int k = x;
    
    cout << k << "\n";
    

   
    
    // DEBUGGING PROCEDURE
    // Make sure algorithm is right first
    // Check edge cases
    // Check precision errors, ll vs int
    // Check array bounds (be careful about assumptions)
    // Check every line of code carefully
    // Check variable names, overlap with macros
    
    return 0;
}

#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vii;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define FOR(i,a,b) for (int i = a; i < b; i++)
#define F0R(i,a) for (int i = 0; i < a; i++)
#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)
#define F0Rd(i,a) for (int i = (a)-1; i>=0; i--)
#define pb push_back
#define all(x) x.begin(), x.end()

int n, len, depth, tmp;
string str, ans;

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);
    
    cin >> n >> str;
    len = str.length();
    F0R(i,len){
        if (str[i] == '(') tmp++;
        else tmp--;
        depth = max(depth, tmp);
    }
    F0R(i,len){
        if (str[i] == '('){
            if (tmp + 1 <= depth/2){
                tmp++;
                ans += '0';
            }
            else{
                ans += '1';
            }
        }
        else{
            if (tmp - 1 >= 0){
                tmp--;
                ans += '0';
            }
            else{
                ans += '1';
            }
        }
    }
    cout << ans << "\n";
    
    return 0;
}

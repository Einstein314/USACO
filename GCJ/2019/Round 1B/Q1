#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vii;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define FOR(i,a,b) for (int i = a; i < b; i++)
#define F0R(i,a) for (int i = 0; i < a; i++)
#define mp make_pair
#define pb push_back
#define all(x) x.begin(), x.end()

const int mxn = 1e5 + 500;
int T, P, Q, x, y, xcnt[mxn], ycnt[mxn], mxx, mxy, xa, ya;
char d;

void solve(int c){
    cin >> P >> Q;
    
    memset(xcnt, 0, sizeof(xcnt));
    memset(ycnt, 0, sizeof(ycnt));
    
    
    for (int i = 0; i < P; ++i){
        cin >> x >> y >> d;
        if (d == 'N'){
            for (int j = y+1; j <= Q; ++j){
                ycnt[j]++;
            }
        }
        if (d == 'S'){
            for (int j = y-1; j >= 0; --j){
                ycnt[j]++;
            }
        }
        if (d == 'E'){
            for (int j = x+1; j <= Q; ++j){
                xcnt[j]++;
            }
        }
        if (d == 'W'){
            for (int j = x-1; j >=0; --j){
                xcnt[j]++;
            }
        }
    }
    mxx = 0;
    mxy = 0;
    xa = 0;
    ya = 0;
    for (int i = 0; i <= Q; ++i){
        mxx = max(mxx, xcnt[i]);
        mxy = max(mxy, ycnt[i]);
    }
    for (int i = 0; i <= Q; ++i){
        if (xcnt[i] == mxx){
            xa = i;
            break;
        }
    }
    for (int i = 0; i <= Q; ++i){
        if (ycnt[i] == mxy){
            ya = i;
            break;
        }
    }
    cout << "Case #" << c << ": " << xa << " " << ya << "\n";
    
}

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);
  
    cin >> T;
    for (int cnum = 1; cnum <= T; ++cnum) solve(cnum);
   
 
    return 0;
}



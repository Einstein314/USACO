#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int, int> pii;
typedef vector<pii> vii;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;


int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int T, N, M;
    cin >> T >> N >> M;
    
    int arr[6] = {7, 11, 13, 15, 17, 16};

    for (int cnum = 1; cnum <= T; ++cnum){
        
        int guess = 0, mod = 1;
        
        for (int i = 0; i < 6; ++i){
            int ans = 0;
            for (int j = 0; j < 18; ++j){
                cout << arr[i] << " \n"[j+1 == 18];
            }
            cout << flush;
            for (int j = 0; j < 18; ++j){
                int r;
                cin >> r;
                ans = (ans + r) % arr[i];
            }
            ans %= arr[i];
            while (guess % arr[i] != ans){
                guess += mod;
            }
//            assert(guess % arr[i] == ans);
//            assert(__gcd(mod, arr[i]) == 1);
            mod *= arr[i];
            
        }
//        assert(mod > M);
        cout << guess << endl << flush;
        int check; cin >> check;
        if (check == -1) break;

    }
   
    
    return 0;
}


